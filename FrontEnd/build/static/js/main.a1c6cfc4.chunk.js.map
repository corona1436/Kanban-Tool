{"version":3,"sources":["components/Project/ProjectItem.js","components/Project/CreateProjectButton.js","components/Dashboard.js","components/Layout/Header.js","components/Project/AddProject.js","App.js","serviceWorker.js","index.js"],"names":["ProjectItem","className","href","Component","CreateProjectButton","Fragment","Link","to","Dashboard","Header","type","data-toggle","data-target","id","AddProject","state","projectName","projectIdentifier","description","start_date","end_date","onChange","bind","onSubmit","e","this","setState","target","name","value","preventDefault","newProject","console","log","placeholder","App","Route","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.a1c6cfc4.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\n\r\nclass ProjectItem extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"container\">\r\n        <div className=\"card card-body bg-light mb-3\">\r\n          <div className=\"row\">\r\n            <div className=\"col-2\">\r\n              <span className=\"mx-auto\">REACT</span>\r\n            </div>\r\n            <div className=\"col-lg-6 col-md-4 col-8\">\r\n              <h3>Spring / React Project</h3>\r\n              <p>Project to create a Kanban Board with Spring Boot and React</p>\r\n            </div>\r\n            <div className=\"col-md-4 d-none d-lg-block\">\r\n              <ul className=\"list-group\">\r\n                <a href=\"#\">\r\n                  <li className=\"list-group-item board\">\r\n                    <i className=\"fa fa-flag-checkered pr-1\"> Project Board </i>\r\n                  </li>\r\n                </a>\r\n                <a href=\"#\">\r\n                  <li className=\"list-group-item update\">\r\n                    <i className=\"fa fa-edit pr-1\"> Update Project Info</i>\r\n                  </li>\r\n                </a>\r\n                <a href=\"\">\r\n                  <li className=\"list-group-item delete\">\r\n                    <i className=\"fa fa-minus-circle pr-1\"> Delete Project</i>\r\n                  </li>\r\n                </a>\r\n              </ul>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ProjectItem;","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst CreateProjectButton = () => {\r\n  return (\r\n    <React.Fragment>\r\n      <Link to=\"/addProject\" className=\"btn btn-lg btn-info\">\r\n        Create a Project\r\n      </Link>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default CreateProjectButton;","import React, { Component } from \"react\";\nimport ProjectItem from \"./Project/ProjectItem\";\nimport CreateProjectButton from \"./Project/CreateProjectButton\";\n\nclass Dashboard extends Component {\n  render() {\n    return (\n      <div className=\"projects\">\n        <div className=\"container\">\n          <div className=\"row\">\n            <div className=\"col-md-12\">\n              <h1 className=\"display-4 text-center\">Projects</h1>\n              <br />\n              <CreateProjectButton />\n\n              <br />\n              <hr />\n              <ProjectItem />\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Dashboard;","import React, { Component } from \"react\";\r\n\r\nclass Header extends Component {\r\n  render() {\r\n    return (\r\n      <nav className=\"navbar navbar-expand-sm navbar-dark bg-primary mb-4\">\r\n        <div className=\"container\">\r\n          <a className=\"navbar-brand\" href=\"Dashboard.html\">\r\n            Personal Project Management Tool\r\n          </a>\r\n          <button\r\n            className=\"navbar-toggler\"\r\n            type=\"button\"\r\n            data-toggle=\"collapse\"\r\n            data-target=\"#mobile-nav\"\r\n          >\r\n            <span className=\"navbar-toggler-icon\" />\r\n          </button>\r\n\r\n          <div className=\"collapse navbar-collapse\" id=\"mobile-nav\">\r\n            <ul className=\"navbar-nav mr-auto\">\r\n              <li className=\"nav-item\">\r\n                <a className=\"nav-link\" href=\"/dashboard\">\r\n                  Dashboard\r\n                </a>\r\n              </li>\r\n            </ul>\r\n\r\n            <ul className=\"navbar-nav ml-auto\">\r\n              <li className=\"nav-item\">\r\n                <a className=\"nav-link \" href=\"register.html\">\r\n                  Sign Up\r\n                </a>\r\n              </li>\r\n              <li className=\"nav-item\">\r\n                <a className=\"nav-link\" href=\"login.html\">\r\n                  Login\r\n                </a>\r\n              </li>\r\n            </ul>\r\n          </div>\r\n        </div>\r\n      </nav>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Header;","import React, { Component } from \"react\";\r\n\r\nclass AddProject extends Component {\r\n  constructor() {\r\n    super();\r\n\r\n    this.state = {\r\n      projectName: \"\",\r\n      projectIdentifier: \"\",\r\n      description: \"\",\r\n      start_date: \"\",\r\n      end_date: \"\"\r\n    };\r\n\r\n    this.onChange = this.onChange.bind(this);\r\n    this.onSubmit = this.onSubmit.bind(this);\r\n  }\r\n\r\n  onChange(e) {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  }\r\n\r\n  onSubmit(e) {\r\n    e.preventDefault();\r\n    const newProject = {\r\n      projectName: this.state.projectName,\r\n      projectIdentifier: this.state.projectIdentifier,\r\n      description: this.state.description,\r\n      start_date: this.state.start_date,\r\n      end_date: this.state.end_date\r\n    };\r\n\r\n    console.log(newProject);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        {\r\n          //check name attribute input fields\r\n          //create constructor\r\n          //set state\r\n          //set value on input fields\r\n          //create onChange function\r\n          //set onChange on each input field\r\n          //bind on constructor\r\n          //check state change in the react extension\r\n        }\r\n\r\n        <div className=\"project\">\r\n          <div className=\"container\">\r\n            <div className=\"row\">\r\n              <div className=\"col-md-8 m-auto\">\r\n                <h5 className=\"display-4 text-center\">Create Project form</h5>\r\n                <hr />\r\n                <form onSubmit={this.onSubmit}>\r\n                  <div className=\"form-group\">\r\n                    <input\r\n                      type=\"text\"\r\n                      className=\"form-control form-control-lg \"\r\n                      placeholder=\"Project Name\"\r\n                      name=\"projectName\"\r\n                      value={this.state.projectName}\r\n                      onChange={this.onChange}\r\n                    />\r\n                  </div>\r\n                  <div className=\"form-group\">\r\n                    <input\r\n                      type=\"text\"\r\n                      className=\"form-control form-control-lg\"\r\n                      placeholder=\"Unique Project ID\"\r\n                      name=\"projectIdentifier\"\r\n                      value={this.state.projectIdentifier}\r\n                      onChange={this.onChange}\r\n                    />\r\n                  </div>\r\n                  <div className=\"form-group\">\r\n                    <textarea\r\n                      className=\"form-control form-control-lg\"\r\n                      placeholder=\"Project Description\"\r\n                      name=\"description\"\r\n                      value={this.state.description}\r\n                      onChange={this.onChange}\r\n                    />\r\n                  </div>\r\n                  <h6>Start Date</h6>\r\n                  <div className=\"form-group\">\r\n                    <input\r\n                      type=\"date\"\r\n                      className=\"form-control form-control-lg\"\r\n                      name=\"start_date\"\r\n                      value={this.state.start_date}\r\n                      onChange={this.onChange}\r\n                    />\r\n                  </div>\r\n                  <h6>Estimated End Date</h6>\r\n                  <div className=\"form-group\">\r\n                    <input\r\n                      type=\"date\"\r\n                      className=\"form-control form-control-lg\"\r\n                      name=\"end_date\"\r\n                      value={this.state.end_date}\r\n                      onChange={this.onChange}\r\n                    />\r\n                  </div>\r\n\r\n                  <input\r\n                    type=\"submit\"\r\n                    className=\"btn btn-primary btn-block mt-4\"\r\n                  />\r\n                </form>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AddProject;","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport Dashboard from \"./components/Dashboard\";\nimport Header from \"./components/Layout/Header\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport AddProject from \"./components/Project/AddProject\";\n\nclass App extends Component {\n  render() {\n    return (\n      <Router>\n        <div className=\"App\">\n          <Header />\n          <Route exact path=\"/dashboard\" component={Dashboard} />\n          <Route exact path=\"/addProject\" component={AddProject} />\n        </div>\n      </Router>\n    );\n  }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}